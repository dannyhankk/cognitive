syntax = "proto3";

option go_package="github.com/dannyhankk/cognitive";

package cognitive;

service Text2Speech {
  rpc Chat2VoiceRequest(ChatRequest) returns (ChatResponse) {}
  rpc FetchVideoList(FetchVideoRequest) returns(FetchVideoResponse){}
  rpc ResetGenVoice(ResetVoiceGenRequest) returns(ResetVoiceGenResponse){}
  rpc FetchVoiceText(FetchVoiceTextRequest) returns (FetchVoiceTextResponse){}

  rpc LoadIcons(LoadIconsRequest) returns(LoadIconsResponse) {}

  rpc AddApp(AddAppRequest) returns (AddAppResponse) {}
  rpc DeleteApp(DeleteAppRequest) returns (DeleteAppResponse) {}
  rpc LoadApps(LoadAppsRequest) returns (LoadAppsResponse) {}
}

message ReqHead {
  string id = 1;
}

message RspHead {
  int32 code = 1;
  string msg = 2;
}

enum LangType {
  ENGLISH = 0;
  RUSSIA = 1;
  FRENCH = 2;
  SPANISH = 3;
  PORTUGAL = 4;
  JAPANESE = 5;
  KOREAN = 6;
  ARABIC = 7;
}

message ChatRequest {
  ReqHead head = 1;
  string title = 2;
  string text = 3;
  int32 lang = 4;
}

message  ChatResponse {
  RspHead head = 1;
  Video video_item = 2;
}

message FetchVideoRequest {
  ReqHead head = 1;
  string session = 2;
}

message Video {
  string src = 1;
  string title = 2;
  string author = 3;
}

message FetchVideoResponse {
  RspHead head = 1;
  repeated Video videoList = 2;
}

message ResetVoiceGenRequest {
  ReqHead head = 1;
}

message ResetVoiceGenResponse {
  RspHead head = 1;
}

message FetchVoiceTextRequest {
  ReqHead head = 1;
  string  file_url = 2;
}

message FetchVoiceTextResponse {
  RspHead head = 1;
  string text = 2;
}

message LoadIconsRequest {
  ReqHead head = 1;
}

message LoadIconsResponse {
  RspHead head = 1;
  repeated string icons = 2;
}

message AppInfo {
  string title = 1;
  string describe = 2;
  string prompt = 3;
  string  id = 4;
  string  icon = 5;
  string creator = 6;
}

message AddAppRequest{
  ReqHead head = 1;
  AppInfo app = 2;
}

message AddAppResponse {
  RspHead head = 1;
}

message DeleteAppRequest {
  ReqHead head = 1;
  string id = 5;
}

message DeleteAppResponse {
  RspHead head = 1;
}

message LoadAppsRequest {
  ReqHead head = 1;
}

message LoadAppsResponse {
  RspHead head = 1;
  repeated AppInfo apps = 2;
}
